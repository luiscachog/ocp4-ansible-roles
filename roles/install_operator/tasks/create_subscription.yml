---

- name: create subscriptions v1
  block:
    - name: create subscription for {{ operator_name }}
      k8s:
        state: present
        wait: true
        definition:
          apiVersion: operators.coreos.com/v1alpha1
          kind: Subscription
          metadata:
            name: "{{ operator_name }}"
            namespace: "{{ operator_namespace }}"
          spec:
            channel: "{{ operator_channel }}"
            installPlanApproval: Automatic
            name: "{{ operator_name }}"
            source: "{{ operator_catalogsource }}"
            sourceNamespace: openshift-marketplace

    - name: wait for successful installation...
      k8s_info:
        api_version: operators.coreos.com/v1alpha1
        kind: ClusterServiceVersion
        namespace: "{{ operator_namespace }}"
      register: clusterserviceversion_install_status
      until:
        - clusterserviceversion_install_status.resources[0].status.reason is defined
        - clusterserviceversion_install_status.resources[0].status.reason == "InstallSucceeded"
      retries: 60
      delay: 10


    - name: wait for successful deployment...
      k8s_info:
        api_version: v1
        kind: Deployment
        name: "{{ operator_name }}"
        namespace: "{{ operator_namespace }}"
      register: operator_deploy_status
      until:
        - operator_deploy_status.resources[0].status.readyReplicas is defined
        - operator_deploy_status.resources[0].status.readyReplicas >= 1
      retries: 60
      delay: 1

  when:
    - pip_module_openshift_installed  == "0"

- name: create subscriptions v2
  block:
    - name: create manifest template for {{ operator_name }} subscription
      template:
        src: subscription.yml.j2
        dest: "{{ manifests_dir }}/{{ operator_name }}-subscription.yml"
        mode: 0644
        lstrip_blocks: true

    - name: Apply {{ operator_namespace }} manifest file
      command: "oc apply -f {{ manifests_dir }}/{{ operator_name }}-subscription.yml"

    - name: Wait until {{ operator_name }} subscription is created
      command: "oc get subscription {{ operator_name }} -n {{ operator_namespace }} -o jsonpath='{.status.conditions[].status}'"
      register: subscription_created
      until: "'False' in subscription_created.stdout"
      retries: 60
      delay: 2

    - name: wait for successful installation...
      shell: "oc get clusterserviceversion -n {{ operator_namespace }} | grep {{ operator_name }} | awk '{ print $(NF) }'"
      register: clusterserviceversion_created
      until: "'Succeeded' in clusterserviceversion_created.stdout"
      retries: 60
      delay: 2

    - name: wait for successful deployment... v2.1
      command: "oc get deployment {{ operator_name }} -n {{ operator_namespace }} -o jsonpath='{.status.readyReplicas}' "
      register: deployment_created
      until:
        - deployment_created.stdout | int >= 1
      retries: 60
      delay: 10
      when:
        - operator_name != "serverless-operator"
        - operator_name != "openshift-gitops-operator"

    - name: wait for successful deployment...v2.2
      command: "oc get deployment {{ item }} -n {{ operator_namespace }} -o jsonpath='{.status.readyReplicas}' "
      register: deployment_created
      until:
        - deployment_created.stdout | int >= 1
      retries: 60
      delay: 10
      loop:
        - knative-openshift
        - knative-openshift-ingress
        - knative-operator
      when: operator_name == "serverless-operator"

    - name: wait for successful deployment...v2.3
      command: "oc get deployment {{ item }} -n {{ operator_namespace }} -o jsonpath='{.status.readyReplicas}' "
      register: deployment_created
      until:
        - deployment_created.stdout | int >= 1
      retries: 60
      delay: 10
      loop:
        - gitops-operator-controller-manager
      when: operator_name == "openshift-gitops-operator"

  when:
    - pip_module_openshift_installed  != "0"
